options:
  logsBucket: gs://meditrack-healthsync-cloudbuild-logs  # Specify your bucket

steps:
  # Step 1: Build Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/meditrack-healthsync/patient-record-service:latest'
      - '.'

  # Step 2: Push Docker Image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/meditrack-healthsync/patient-record-service:latest'

  # Step 3: Run Tests (if applicable)
  - name: 'python'
    entrypoint: 'pytest'
    args: ['./tests']

  # Step 4: Deploy to Kubernetes
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'apply'
      - '-f'
      - 'deployment.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'

  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'apply'
      - '-f'
      - 'service.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'

  # Step 5: Notify Success (optional)
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'pubsub'
      - 'topics'
      - 'publish'
      - 'ci-cd-status'
      - '--message'
      - 'CI/CD pipeline completed successfully.'
